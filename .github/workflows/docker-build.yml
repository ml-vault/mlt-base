name: Docker Build

on:
  workflow_dispatch:
  #push:
  #  branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1

jobs:
  simple-ml:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          - {latest: "true", base_image: "runpod/pytorch:2.8.0-py3.11-cuda12.8.1-cudnn-devel-ubuntu22.04"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          echo "REPO_NAMESPACE=${REPO%%/*}" >> ${GITHUB_ENV}
          echo "REPO_NAME=${REPO#*/}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
            img_path_ghcr="ghcr.io/${{ env.REPO_NAMESPACE }}/${{ env.REPO_NAME }}"
            img_path_dhub="${{ vars.DOCKERHUB_USER }}/${{ env.REPO_NAME }}"

            base_tag="simple-ml-pytorch2.8-cuda12.8-${{ env.UBUNTU_VERSION }}"

            if [[ ${{ matrix.build.latest }} == "true" ]]; then
                echo "Marking latest"
                TAGS="${img_path_ghcr}:${base_tag}, ${img_path_ghcr}:latest"
                TAGS="${TAGS}, ${img_path_dhub}:${base_tag}, ${img_path_dhub}:latest"
            else
                TAGS="${img_path_ghcr}:${base_tag}, ${img_path_dhub}:${base_tag}"
            fi
            echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: ${{ env.TAGS }}
